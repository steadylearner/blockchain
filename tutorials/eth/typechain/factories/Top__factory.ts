/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { Top } from "../Top";

export class Top__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Top> {
    return super.deploy(overrides || {}) as Promise<Top>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Top {
    return super.attach(address) as Top;
  }
  connect(signer: Signer): Top__factory {
    return super.connect(signer) as Top__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Top {
    return new Contract(address, _abi, signerOrProvider) as Top;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getTops",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "upvotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "downvotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "created_at",
            type: "uint256",
          },
        ],
        internalType: "struct Top.Item[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "upvotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "downvotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "created_at",
            type: "uint256",
          },
        ],
        internalType: "struct Top.Item",
        name: "top",
        type: "tuple",
      },
    ],
    name: "include",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newowner",
        type: "address",
      },
    ],
    name: "setNewOwner",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tops",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "upvotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "downvotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "created_at",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalTops",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200005e6040518060400160405280601c81526020017f4465706c6f7920546f7020616e6420736574206f776e657220746f200000000081525033620000a460201b6200067b1760201c565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000290565b620001468282604051602401620000bd929190620001c5565b6040516020818303038152906040527f319af333000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506200014a60201b60201c565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6200017e8162000215565b82525050565b60006200019182620001f9565b6200019d818562000204565b9350620001af81856020860162000249565b620001ba816200027f565b840191505092915050565b60006040820190508181036000830152620001e1818562000184565b9050620001f2602083018462000173565b9392505050565b600081519050919050565b600082825260208201905092915050565b6000620002228262000229565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b83811015620002695780820151818401526020810190506200024c565b8381111562000279576000848401525b50505050565b6000601f19601f8301169050919050565b610f3580620002a06000396000f3fe6080604052600436106100705760003560e01c80638da5cb5b1161004e5780638da5cb5b146100f2578063a72116641461011d578063f5a1f5b41461015d578063f6bb01111461017957610070565b80631bbb61a91461007557806326a6294a146100a05780634cc82215146100c9575b600080fd5b34801561008157600080fd5b5061008a6101a4565b6040516100979190610b9d565b60405180910390f35b3480156100ac57600080fd5b506100c760048036038101906100c2919061096a565b6102b3565b005b3480156100d557600080fd5b506100f060048036038101906100eb91906109ab565b6103ad565b005b3480156100fe57600080fd5b506101076104b1565b6040516101149190610b82565b60405180910390f35b34801561012957600080fd5b50610144600480360381019061013f91906109ab565b6104d5565b6040516101549493929190610bef565b60405180910390f35b61017760048036038101906101729190610941565b61059d565b005b34801561018557600080fd5b5061018e61066e565b60405161019b9190610c5b565b60405180910390f35b60606001805480602002602001604051908101604052809291908181526020016000905b828210156102aa57838290600052602060002090600402016040518060800160405290816000820180546101fb90610db0565b80601f016020809104026020016040519081016040528092919081815260200182805461022790610db0565b80156102745780601f1061024957610100808354040283529160200191610274565b820191906000526020600020905b81548152906001019060200180831161025757829003601f168201915b505050505081526020016001820154815260200160028201548152602001600382015481525050815260200190600101906101c8565b50505050905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610341576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033890610c3b565b60405180910390fd5b60018190806001815401808255809150506001900390600052602060002090600402016000909190919091506000820151816000019080519060200190610389929190610740565b50602082015181600101556040820151816002015560608201518160030155505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461043b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043290610c3b565b60405180910390fd5b60018181548110610475577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600402016000808201600061049491906107c6565b600182016000905560028201600090556003820160009055505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600181815481106104e557600080fd5b906000526020600020906004020160009150905080600001805461050890610db0565b80601f016020809104026020016040519081016040528092919081815260200182805461053490610db0565b80156105815780601f1061055657610100808354040283529160200191610581565b820191906000526020600020905b81548152906001019060200180831161056457829003601f168201915b5050505050908060010154908060020154908060030154905084565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461062b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062290610c3b565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600180549050905090565b6107138282604051602401610691929190610bbf565b6040516020818303038152906040527f319af333000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610717565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b82805461074c90610db0565b90600052602060002090601f01602090048101928261076e57600085556107b5565b82601f1061078757805160ff19168380011785556107b5565b828001600101855582156107b5579182015b828111156107b4578251825591602001919060010190610799565b5b5090506107c29190610806565b5090565b5080546107d290610db0565b6000825580601f106107e45750610803565b601f0160209004906000526020600020908101906108029190610806565b5b50565b5b8082111561081f576000816000905550600101610807565b5090565b600061083661083184610c9b565b610c76565b90508281526020810184848401111561084e57600080fd5b610859848285610d6e565b509392505050565b60008135905061087081610ed1565b92915050565b600082601f83011261088757600080fd5b8135610897848260208601610823565b91505092915050565b6000608082840312156108b257600080fd5b6108bc6080610c76565b9050600082013567ffffffffffffffff8111156108d857600080fd5b6108e484828501610876565b60008301525060206108f88482850161092c565b602083015250604061090c8482850161092c565b60408301525060606109208482850161092c565b60608301525092915050565b60008135905061093b81610ee8565b92915050565b60006020828403121561095357600080fd5b600061096184828501610861565b91505092915050565b60006020828403121561097c57600080fd5b600082013567ffffffffffffffff81111561099657600080fd5b6109a2848285016108a0565b91505092915050565b6000602082840312156109bd57600080fd5b60006109cb8482850161092c565b91505092915050565b60006109e08383610b01565b905092915050565b6109f181610d32565b82525050565b6000610a0282610cdc565b610a0c8185610cff565b935083602082028501610a1e85610ccc565b8060005b85811015610a5a5784840389528151610a3b85826109d4565b9450610a4683610cf2565b925060208a01995050600181019050610a22565b50829750879550505050505092915050565b6000610a7782610ce7565b610a818185610d10565b9350610a91818560208601610d7d565b610a9a81610e71565b840191505092915050565b6000610ab082610ce7565b610aba8185610d21565b9350610aca818560208601610d7d565b610ad381610e71565b840191505092915050565b6000610aeb602483610d21565b9150610af682610e82565b604082019050919050565b60006080830160008301518482036000860152610b1e8282610a6c565b9150506020830151610b336020860182610b64565b506040830151610b466040860182610b64565b506060830151610b596060860182610b64565b508091505092915050565b610b6d81610d64565b82525050565b610b7c81610d64565b82525050565b6000602082019050610b9760008301846109e8565b92915050565b60006020820190508181036000830152610bb781846109f7565b905092915050565b60006040820190508181036000830152610bd98185610aa5565b9050610be860208301846109e8565b9392505050565b60006080820190508181036000830152610c098187610aa5565b9050610c186020830186610b73565b610c256040830185610b73565b610c326060830184610b73565b95945050505050565b60006020820190508181036000830152610c5481610ade565b9050919050565b6000602082019050610c706000830184610b73565b92915050565b6000610c80610c91565b9050610c8c8282610de2565b919050565b6000604051905090565b600067ffffffffffffffff821115610cb657610cb5610e42565b5b610cbf82610e71565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610d3d82610d44565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610d9b578082015181840152602081019050610d80565b83811115610daa576000848401525b50505050565b60006002820490506001821680610dc857607f821691505b60208210811415610ddc57610ddb610e13565b5b50919050565b610deb82610e71565b810181811067ffffffffffffffff82111715610e0a57610e09610e42565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f546865206d6573736167652073656e646572206973206e6f7420746865206f7760008201527f6e65722e00000000000000000000000000000000000000000000000000000000602082015250565b610eda81610d32565b8114610ee557600080fd5b50565b610ef181610d64565b8114610efc57600080fd5b5056fea2646970667358221220eaae1b1448c615494b92fec261fea0114d5f1e81dd7e46aeb251a53b4c8ada8264736f6c63430008030033";
