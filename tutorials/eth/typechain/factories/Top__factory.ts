/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { Top } from "../Top";

export class Top__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Top> {
    return super.deploy(overrides || {}) as Promise<Top>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Top {
    return super.attach(address) as Top;
  }
  connect(signer: Signer): Top__factory {
    return super.connect(signer) as Top__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Top {
    return new Contract(address, _abi, signerOrProvider) as Top;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getTops",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "upvotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "downvotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "created_at",
            type: "uint256",
          },
        ],
        internalType: "struct Top.Item[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "upvotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "downvotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "created_at",
            type: "uint256",
          },
        ],
        internalType: "struct Top.Item",
        name: "top",
        type: "tuple",
      },
    ],
    name: "include",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tops",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "upvotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "downvotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "created_at",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalTops",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200005e6040518060400160405280601d81526020017f4465706c6f7920546f707320616e6420736574206f776e657220746f2000000081525033620000a460201b620005321760201c565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000290565b620001468282604051602401620000bd929190620001c5565b6040516020818303038152906040527f319af333000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506200014a60201b60201c565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6200017e8162000215565b82525050565b60006200019182620001f9565b6200019d818562000204565b9350620001af81856020860162000249565b620001ba816200027f565b840191505092915050565b60006040820190508181036000830152620001e1818562000184565b9050620001f2602083018462000173565b9392505050565b600081519050919050565b600082825260208201905092915050565b6000620002228262000229565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b83811015620002695780820151818401526020810190506200024c565b8381111562000279576000848401525b50505050565b6000601f19601f8301169050919050565b610d9780620002a06000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80631bbb61a91461006757806326a6294a146100855780634cc82215146100a15780638da5cb5b146100bd578063a7211664146100db578063f6bb01111461010e575b600080fd5b61006f61012c565b60405161007c9190610a16565b60405180910390f35b61009f600480360381019061009a91906107e3565b61023b565b005b6100bb60048036038101906100b69190610824565b610335565b005b6100c5610439565b6040516100d291906109fb565b60405180910390f35b6100f560048036038101906100f09190610824565b61045d565b6040516101059493929190610a68565b60405180910390f35b610116610525565b6040516101239190610ad4565b60405180910390f35b60606001805480602002602001604051908101604052809291908181526020016000905b82821015610232578382906000526020600020906004020160405180608001604052908160008201805461018390610c29565b80601f01602080910402602001604051908101604052809291908181526020018280546101af90610c29565b80156101fc5780601f106101d1576101008083540402835291602001916101fc565b820191906000526020600020905b8154815290600101906020018083116101df57829003601f168201915b50505050508152602001600182015481526020016002820154815260200160038201548152505081526020019060010190610150565b50505050905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c090610ab4565b60405180910390fd5b600181908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000190805190602001906103119291906105f7565b50602082015181600101556040820151816002015560608201518160030155505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ba90610ab4565b60405180910390fd5b600181815481106103fd577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600402016000808201600061041c919061067d565b600182016000905560028201600090556003820160009055505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061046d57600080fd5b906000526020600020906004020160009150905080600001805461049090610c29565b80601f01602080910402602001604051908101604052809291908181526020018280546104bc90610c29565b80156105095780601f106104de57610100808354040283529160200191610509565b820191906000526020600020905b8154815290600101906020018083116104ec57829003601f168201915b5050505050908060010154908060020154908060030154905084565b6000600180549050905090565b6105ca8282604051602401610548929190610a38565b6040516020818303038152906040527f319af333000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506105ce565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b82805461060390610c29565b90600052602060002090601f016020900481019282610625576000855561066c565b82601f1061063e57805160ff191683800117855561066c565b8280016001018555821561066c579182015b8281111561066b578251825591602001919060010190610650565b5b50905061067991906106bd565b5090565b50805461068990610c29565b6000825580601f1061069b57506106ba565b601f0160209004906000526020600020908101906106b991906106bd565b5b50565b5b808211156106d65760008160009055506001016106be565b5090565b60006106ed6106e884610b14565b610aef565b90508281526020810184848401111561070557600080fd5b610710848285610be7565b509392505050565b600082601f83011261072957600080fd5b81356107398482602086016106da565b91505092915050565b60006080828403121561075457600080fd5b61075e6080610aef565b9050600082013567ffffffffffffffff81111561077a57600080fd5b61078684828501610718565b600083015250602061079a848285016107ce565b60208301525060406107ae848285016107ce565b60408301525060606107c2848285016107ce565b60608301525092915050565b6000813590506107dd81610d4a565b92915050565b6000602082840312156107f557600080fd5b600082013567ffffffffffffffff81111561080f57600080fd5b61081b84828501610742565b91505092915050565b60006020828403121561083657600080fd5b6000610844848285016107ce565b91505092915050565b6000610859838361097a565b905092915050565b61086a81610bab565b82525050565b600061087b82610b55565b6108858185610b78565b93508360208202850161089785610b45565b8060005b858110156108d357848403895281516108b4858261084d565b94506108bf83610b6b565b925060208a0199505060018101905061089b565b50829750879550505050505092915050565b60006108f082610b60565b6108fa8185610b89565b935061090a818560208601610bf6565b61091381610cea565b840191505092915050565b600061092982610b60565b6109338185610b9a565b9350610943818560208601610bf6565b61094c81610cea565b840191505092915050565b6000610964602483610b9a565b915061096f82610cfb565b604082019050919050565b6000608083016000830151848203600086015261099782826108e5565b91505060208301516109ac60208601826109dd565b5060408301516109bf60408601826109dd565b5060608301516109d260608601826109dd565b508091505092915050565b6109e681610bdd565b82525050565b6109f581610bdd565b82525050565b6000602082019050610a106000830184610861565b92915050565b60006020820190508181036000830152610a308184610870565b905092915050565b60006040820190508181036000830152610a52818561091e565b9050610a616020830184610861565b9392505050565b60006080820190508181036000830152610a82818761091e565b9050610a9160208301866109ec565b610a9e60408301856109ec565b610aab60608301846109ec565b95945050505050565b60006020820190508181036000830152610acd81610957565b9050919050565b6000602082019050610ae960008301846109ec565b92915050565b6000610af9610b0a565b9050610b058282610c5b565b919050565b6000604051905090565b600067ffffffffffffffff821115610b2f57610b2e610cbb565b5b610b3882610cea565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610bb682610bbd565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610c14578082015181840152602081019050610bf9565b83811115610c23576000848401525b50505050565b60006002820490506001821680610c4157607f821691505b60208210811415610c5557610c54610c8c565b5b50919050565b610c6482610cea565b810181811067ffffffffffffffff82111715610c8357610c82610cbb565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f546865206d6573736167652073656e646572206973206e6f7420746865206f7760008201527f6e65722e00000000000000000000000000000000000000000000000000000000602082015250565b610d5381610bdd565b8114610d5e57600080fd5b5056fea2646970667358221220a912e3c7ae11158a7b245ca77369221e0066f469afc72e58abbc881a90e13f1764736f6c63430008030033";
